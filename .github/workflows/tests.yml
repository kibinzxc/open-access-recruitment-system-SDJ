name: Run Tests + Allure Reports

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m playwright install

      - name: Install Allure CLI
        run: npm install -g allure-commandline --unsafe-perm=true

      - name: Run pytest with Allure results
        id: pytest
        run: |
          pytest --alluredir=allure-results -v --tb=short || echo "PYTEST_FAILED=true" >> $GITHUB_ENV

      # Always upload allure results, even if pytest failed
      - name: Upload Allure results artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Generate Allure HTML report
        if: always()
        run: |
          allure generate allure-results --clean -o allure-report || echo "Allure generation failed"

      - name: Upload Allure HTML report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      # This ensures the workflow fails if pytest failed
      - name: Fail job if tests failed
        if: env.PYTEST_FAILED == 'true'
        run: |
          echo "‚ùå Some tests failed. Failing workflow..."
          exit 1

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/master' && env.PYTEST_FAILED != 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
